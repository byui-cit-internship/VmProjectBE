apiVersion: apps/v1
kind: Deployment
metadata:
  name: vmproject-be-api-dev
spec:
  replicas: 1
  selector:
    matchLabels:
      app: vmproject-be-api-dev
  template:
    metadata:
      labels:
        app: vmproject-be-api-dev
    spec:
      containers:
      - name: vmproject-be-api-dev
        env:
        - name: APSNETCORE_ENVIRONMENT
          value: Development
        - name: DB_SERVER
          valueFrom:
            secretKeyRef:
              name: be-env
              key: DB_SERVER
        - name: DB_PORT
          valueFrom:
            secretKeyRef:
              name: be-env
              key: DB_PORT
        - name: DB_DATABASE
          valueFrom:
            secretKeyRef:
              name: be-env
              key: DB_DATABASE
        - name: DB_USER
          valueFrom:
            secretKeyRef:
              name: be-env
              key: DB_USER
        - name: DB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: be-env
              key: DB_PASSWORD
        - name: BFF_PASSWORD
          valueFrom:
            secretKeyRef:
              name: be-env
              key: BFF_PASSWORD
        image: rcr.citwdd.net/database-repository/database-vima:latest
        ports:
        - containerPort: 80        
        resources:
          limits:
            cpu: ".5"
            memory: "500Mi"
          requests:
            cpu: ".25"
            memory: "250Mi"
        livenessProbe:
          httpGet:
            path: /
            port: 80
          initialDelaySeconds: 10
          periodSeconds: 10
      imagePullSecrets:
      - name: database-rcr-secret           
---
apiVersion: v1
kind: Service
metadata:
  name: vmproject-be-api-dev
spec:
  selector:
    app: vmproject-be-api-dev
  type: LoadBalancer
  ports:
  - port: 80
    targetPort: 80    
---
apiVersion: v1
kind: Service
metadata:
  name: vmproject-be-api-dev-nodeport
spec:
  selector:
    app: vmproject-be-api-dev
  type: NodePort
  ports:
    - port: 80
      targetPort: 80
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: vmproject-be-dev-ingress
  namespace: vm-project-dev
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /
    kubernetes.io/ingress.class: "nginx"
    cert-manager.io/cluster-issuer: "letsencrypt-cluster-issuer"
spec:
  tls:
  - hosts:
    - rancher-dev-be-api.citwdd.net
    secretName: dev-vm-be-api-tls
  rules:
  - host: rancher-dev-be-api.citwdd.net
    http:
      paths:
      - backend:
          service:
            name: vmproject-be-api-dev-nodeport
            port: 
              number: 80
            