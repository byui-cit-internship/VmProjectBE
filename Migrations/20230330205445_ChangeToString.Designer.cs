// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using VmProjectBE.DAL;

#nullable disable

namespace Database_VmProject.Migrations
{
    [DbContext(typeof(VmEntities))]
    [Migration("20230330205445_ChangeToString")]
    partial class ChangeToString
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("VmProjectBE.Models.AccessToken", b =>
                {
                    b.Property<int>("AccessTokenId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("access_token_id")
                        .HasColumnOrder(1);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AccessTokenId"), 1L, 1);

                    b.Property<string>("AccessTokenValue")
                        .IsRequired()
                        .HasColumnType("varchar(2000)")
                        .HasColumnName("access_token_value")
                        .HasColumnOrder(2);

                    b.Property<DateTime>("ExpireDate")
                        .HasColumnType("datetime2(7)")
                        .HasColumnName("expire_date")
                        .HasColumnOrder(3);

                    b.Property<int>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("user_id")
                        .HasColumnOrder(4);

                    b.HasKey("AccessTokenId");

                    b.HasIndex("UserId");

                    b.ToTable("access_token", "VmProjectBE");
                });

            modelBuilder.Entity("VmProjectBE.Models.Cookie", b =>
                {
                    b.Property<int>("CookieId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("cookie_id")
                        .HasColumnOrder(1);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CookieId"), 1L, 1);

                    b.Property<string>("CookieName")
                        .IsRequired()
                        .HasColumnType("varchar(40)")
                        .HasColumnName("cookie_name")
                        .HasColumnOrder(3);

                    b.Property<string>("CookieValue")
                        .IsRequired()
                        .HasColumnType("varchar(300)")
                        .HasColumnName("cookie_value")
                        .HasColumnOrder(4);

                    b.Property<int>("SessionTokenId")
                        .HasColumnType("int")
                        .HasColumnName("session_token_id")
                        .HasColumnOrder(2);

                    b.Property<string>("SiteFrom")
                        .IsRequired()
                        .HasColumnType("varchar(20)")
                        .HasColumnName("site_from")
                        .HasColumnOrder(5);

                    b.HasKey("CookieId");

                    b.HasIndex("SessionTokenId");

                    b.ToTable("cookie", "VmProjectBE");
                });

            modelBuilder.Entity("VmProjectBE.Models.Course", b =>
                {
                    b.Property<int>("CourseId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("course_id")
                        .HasColumnOrder(1);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CourseId"), 1L, 1);

                    b.Property<string>("CourseCode")
                        .IsRequired()
                        .HasColumnType("varchar(45)")
                        .HasColumnName("course_code")
                        .HasColumnOrder(2);

                    b.Property<int>("ResourcePoolId")
                        .HasColumnType("int")
                        .HasColumnName("resource_group_id")
                        .HasColumnOrder(3);

                    b.HasKey("CourseId");

                    b.HasIndex("ResourcePoolId");

                    b.ToTable("course", "VmProjectBE");
                });

            modelBuilder.Entity("VmProjectBE.Models.Folder", b =>
                {
                    b.Property<int>("FolderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("folder_id")
                        .HasColumnOrder(1);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FolderId"), 1L, 1);

                    b.Property<string>("FolderDescription")
                        .HasColumnType("varchar(100)")
                        .HasColumnName("folder_description")
                        .HasColumnOrder(3);

                    b.Property<string>("VcenterFolderId")
                        .IsRequired()
                        .HasColumnType("varchar(45)")
                        .HasColumnName("vcenter_folder_id")
                        .HasColumnOrder(2);

                    b.HasKey("FolderId");

                    b.ToTable("folder", "VmProjectBE");
                });

            modelBuilder.Entity("VmProjectBE.Models.FolderUser", b =>
                {
                    b.Property<int>("FolderUserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("folder_user_id")
                        .HasColumnOrder(1);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FolderUserId"), 1L, 1);

                    b.Property<int>("FolderId")
                        .HasColumnType("int")
                        .HasColumnName("folder_id")
                        .HasColumnOrder(2);

                    b.Property<int>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("user_id")
                        .HasColumnOrder(3);

                    b.HasKey("FolderUserId");

                    b.HasIndex("FolderId");

                    b.HasIndex("UserId");

                    b.ToTable("folder_user", "VmProjectBE");
                });

            modelBuilder.Entity("VmProjectBE.Models.IpAddress", b =>
                {
                    b.Property<int>("IpAddressId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ip_address_id")
                        .HasColumnOrder(1);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IpAddressId"), 1L, 1);

                    b.Property<byte[]>("IpAddressField")
                        .IsRequired()
                        .HasColumnType("binary(16)")
                        .HasColumnName("ip_address")
                        .HasColumnOrder(2);

                    b.Property<bool>("IsIpv6")
                        .HasColumnType("bit")
                        .HasColumnName("is_ipv6")
                        .HasColumnOrder(4);

                    b.Property<byte[]>("SubnetMask")
                        .IsRequired()
                        .HasColumnType("binary(16)")
                        .HasColumnName("subnet_mask")
                        .HasColumnOrder(3);

                    b.HasKey("IpAddressId");

                    b.ToTable("ip_address", "VmProjectBE");
                });

            modelBuilder.Entity("VmProjectBE.Models.Pool", b =>
                {
                    b.Property<int>("PoolId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("group_id")
                        .HasColumnOrder(1);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PoolId"), 1L, 1);

                    b.Property<int>("CanvasPoolId")
                        .HasColumnType("int")
                        .HasColumnName("canvas_group_id")
                        .HasColumnOrder(2);

                    b.Property<int>("FolderId")
                        .HasColumnType("int")
                        .HasColumnName("folder_id")
                        .HasColumnOrder(5);

                    b.Property<string>("PoolName")
                        .IsRequired()
                        .HasColumnType("varchar(45)")
                        .HasColumnName("group_name")
                        .HasColumnOrder(3);

                    b.Property<int>("SectionId")
                        .HasColumnType("int")
                        .HasColumnName("section_id")
                        .HasColumnOrder(4);

                    b.HasKey("PoolId");

                    b.HasIndex("FolderId");

                    b.HasIndex("SectionId");

                    b.ToTable("group", "VmProjectBE");
                });

            modelBuilder.Entity("VmProjectBE.Models.PoolMembership", b =>
                {
                    b.Property<int>("PoolMembershipId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("group_membership_id")
                        .HasColumnOrder(1);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PoolMembershipId"), 1L, 1);

                    b.Property<int?>("GroupId")
                        .HasColumnType("int");

                    b.Property<int>("PoolId")
                        .HasColumnType("int")
                        .HasColumnName("group_id")
                        .HasColumnOrder(2);

                    b.Property<int>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("user_id")
                        .HasColumnOrder(3);

                    b.HasKey("PoolMembershipId");

                    b.HasIndex("GroupId");

                    b.HasIndex("UserId");

                    b.ToTable("group_membership", "VmProjectBE");
                });

            modelBuilder.Entity("VmProjectBE.Models.ResourcePool", b =>
                {
                    b.Property<int>("ResourcePoolId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("resource_group_id")
                        .HasColumnOrder(1);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ResourcePoolId"), 1L, 1);

                    b.Property<double>("Cpu")
                        .HasColumnType("float")
                        .HasColumnName("cpu")
                        .HasColumnOrder(5);

                    b.Property<double>("Memory")
                        .HasColumnType("float")
                        .HasColumnName("memory")
                        .HasColumnOrder(4);

                    b.Property<string>("ResourcePoolName")
                        .IsRequired()
                        .HasColumnType("varchar(20)")
                        .HasColumnName("resource_group_name")
                        .HasColumnOrder(2);

                    b.Property<string>("ResourcePoolVsphereId")
                        .HasColumnType("varchar(15)")
                        .HasColumnName("resource_group_vsphere_id")
                        .HasColumnOrder(3);

                    b.HasKey("ResourcePoolId");

                    b.ToTable("resource_group", "VmProjectBE");
                });

            modelBuilder.Entity("VmProjectBE.Models.Role", b =>
                {
                    b.Property<int>("RoleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("role_id")
                        .HasColumnOrder(1);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RoleId"), 1L, 1);

                    b.Property<int?>("CanvasRoleId")
                        .HasColumnType("int")
                        .HasColumnName("canvas_role_id")
                        .HasColumnOrder(3);

                    b.Property<string>("RoleName")
                        .IsRequired()
                        .HasColumnType("varchar(20)")
                        .HasColumnName("role_name")
                        .HasColumnOrder(2);

                    b.HasKey("RoleId");

                    b.ToTable("role", "VmProjectBE");
                });

            modelBuilder.Entity("VmProjectBE.Models.Section", b =>
                {
                    b.Property<int>("SectionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("section_id")
                        .HasColumnOrder(1);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SectionId"), 1L, 1);

                    b.Property<int>("CourseId")
                        .HasColumnType("int")
                        .HasColumnName("course_id")
                        .HasColumnOrder(2);

                    b.Property<int>("FolderId")
                        .HasColumnType("int")
                        .HasColumnName("folder_id")
                        .HasColumnOrder(4);

                    b.Property<string>("LibraryVCenterId")
                        .IsRequired()
                        .HasColumnType("varchar(200)")
                        .HasColumnName("library_vcenter_id")
                        .HasColumnOrder(8);

                    b.Property<int>("ResourcePoolId")
                        .HasColumnType("int")
                        .HasColumnName("resource_group_id")
                        .HasColumnOrder(5);

                    b.Property<int>("SectionCanvasId")
                        .HasColumnType("int")
                        .HasColumnName("section_canvas_id")
                        .HasColumnOrder(6);

                    b.Property<string>("SectionName")
                        .IsRequired()
                        .HasColumnType("varchar(200)")
                        .HasColumnName("section_name")
                        .HasColumnOrder(7);

                    b.Property<int>("SectionNumber")
                        .HasColumnType("int")
                        .HasColumnName("section_number")
                        .HasColumnOrder(9);

                    b.Property<int>("SemesterId")
                        .HasColumnType("int")
                        .HasColumnName("semester_id")
                        .HasColumnOrder(3);

                    b.HasKey("SectionId");

                    b.HasIndex("CourseId");

                    b.HasIndex("FolderId");

                    b.HasIndex("ResourcePoolId");

                    b.HasIndex("SemesterId");

                    b.ToTable("section", "VmProjectBE");
                });

            modelBuilder.Entity("VmProjectBE.Models.Semester", b =>
                {
                    b.Property<int>("SemesterId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("semester_id")
                        .HasColumnOrder(1);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SemesterId"), 1L, 1);

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2(7)")
                        .HasColumnName("end_date")
                        .HasColumnOrder(6);

                    b.Property<int>("EnrollmentTermCanvasId")
                        .HasColumnType("int")
                        .HasColumnName("enrollment_term_canvas_id")
                        .HasColumnOrder(2);

                    b.Property<string>("SemesterTerm")
                        .IsRequired()
                        .HasColumnType("varchar(20)")
                        .HasColumnName("semester_term")
                        .HasColumnOrder(4);

                    b.Property<int>("SemesterYear")
                        .HasColumnType("int")
                        .HasColumnName("semester_year")
                        .HasColumnOrder(3);

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2(7)")
                        .HasColumnName("start_date")
                        .HasColumnOrder(5);

                    b.HasKey("SemesterId");

                    b.ToTable("semester", "VmProjectBE");
                });

            modelBuilder.Entity("VmProjectBE.Models.SessionToken", b =>
                {
                    b.Property<int>("SessionTokenId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("session_token_id")
                        .HasColumnOrder(1);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SessionTokenId"), 1L, 1);

                    b.Property<int>("AccessTokenId")
                        .HasColumnType("int")
                        .HasColumnName("access_token_id")
                        .HasColumnOrder(4);

                    b.Property<DateTime>("ExpireDate")
                        .HasColumnType("datetime2(7)")
                        .HasColumnName("expire_date")
                        .HasColumnOrder(3);

                    b.Property<Guid>("SessionTokenValue")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("sesion_token_value")
                        .HasColumnOrder(2);

                    b.HasKey("SessionTokenId");

                    b.HasIndex("AccessTokenId");

                    b.ToTable("session_token", "VmProjectBE");
                });

            modelBuilder.Entity("VmProjectBE.Models.Tag", b =>
                {
                    b.Property<int>("TagId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("tag_id")
                        .HasColumnOrder(1);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TagId"), 1L, 1);

                    b.Property<int>("TagCategoryId")
                        .HasColumnType("int")
                        .HasColumnName("tag_category_id")
                        .HasColumnOrder(2);

                    b.Property<string>("TagDescription")
                        .HasColumnType("varchar(100)")
                        .HasColumnName("tag_description")
                        .HasColumnOrder(5);

                    b.Property<string>("TagName")
                        .IsRequired()
                        .HasColumnType("varchar(45)")
                        .HasColumnName("tag_name")
                        .HasColumnOrder(4);

                    b.Property<string>("TagVcenterId")
                        .IsRequired()
                        .HasColumnType("varchar(100)")
                        .HasColumnName("tag_vcenter_id")
                        .HasColumnOrder(3);

                    b.HasKey("TagId");

                    b.HasIndex("TagCategoryId");

                    b.ToTable("tag", "VmProjectBE");
                });

            modelBuilder.Entity("VmProjectBE.Models.TagCategory", b =>
                {
                    b.Property<int>("TagCategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("tag_category_id")
                        .HasColumnOrder(1);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TagCategoryId"), 1L, 1);

                    b.Property<string>("TagCategoryDescription")
                        .HasColumnType("varchar(100)")
                        .HasColumnName("tag_category_description")
                        .HasColumnOrder(4);

                    b.Property<string>("TagCategoryName")
                        .IsRequired()
                        .HasColumnType("varchar(45)")
                        .HasColumnName("tag_category_name")
                        .HasColumnOrder(3);

                    b.Property<string>("TagCategoryVcenterId")
                        .IsRequired()
                        .HasColumnType("varchar(100)")
                        .HasColumnName("tag_category_vcenter_id")
                        .HasColumnOrder(2);

                    b.HasKey("TagCategoryId");

                    b.ToTable("tag_category", "VmProjectBE");
                });

            modelBuilder.Entity("VmProjectBE.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("user_id")
                        .HasColumnOrder(1);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"), 1L, 1);

                    b.Property<string>("CanvasToken")
                        .HasColumnType("varchar(100)")
                        .HasColumnName("canvas_token")
                        .HasColumnOrder(6);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("varchar(30)")
                        .HasColumnName("email")
                        .HasColumnOrder(4);

                    b.Property<byte[]>("EncryptedCanvasToken")
                        .HasColumnType("varbinary(MAX)")
                        .HasColumnName("encrypted_canvas_token")
                        .HasColumnOrder(7);

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("varchar(20)")
                        .HasColumnName("first_name")
                        .HasColumnOrder(2);

                    b.Property<bool>("IsAdmin")
                        .HasColumnType("bit")
                        .HasColumnName("is_admin")
                        .HasColumnOrder(5);

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("varchar(20)")
                        .HasColumnName("last_name")
                        .HasColumnOrder(3);

                    b.Property<string>("approveStatus")
                        .HasColumnType("varchar(15)")
                        .HasColumnName("approve_status")
                        .HasColumnOrder(12);

                    b.Property<string>("role")
                        .HasColumnType("varchar(15)")
                        .HasColumnName("role")
                        .HasColumnOrder(11);

                    b.HasKey("UserId");

                    b.ToTable("user", "VmProjectBE");
                });

            modelBuilder.Entity("VmProjectBE.Models.UserSectionRole", b =>
                {
                    b.Property<int>("UserSectionRoleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("user_section_role_id")
                        .HasColumnOrder(1);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserSectionRoleId"), 1L, 1);

                    b.Property<int>("RoleId")
                        .HasColumnType("int")
                        .HasColumnName("role_id")
                        .HasColumnOrder(4);

                    b.Property<int>("SectionId")
                        .HasColumnType("int")
                        .HasColumnName("section_id")
                        .HasColumnOrder(3);

                    b.Property<int>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("user_id")
                        .HasColumnOrder(2);

                    b.HasKey("UserSectionRoleId");

                    b.HasIndex("RoleId");

                    b.HasIndex("SectionId");

                    b.HasIndex("UserId");

                    b.ToTable("user_section_role", "VmProjectBE");
                });

            modelBuilder.Entity("VmProjectBE.Models.Vlan", b =>
                {
                    b.Property<int>("VlanId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("vlan_id")
                        .HasColumnOrder(1);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("VlanId"), 1L, 1);

                    b.Property<string>("VlanDescription")
                        .HasColumnType("varchar(100)")
                        .HasColumnName("vlan_description")
                        .HasColumnOrder(3);

                    b.Property<int>("VlanNumber")
                        .HasColumnType("int")
                        .HasColumnName("vlan_number")
                        .HasColumnOrder(2);

                    b.HasKey("VlanId");

                    b.ToTable("vlan", "VmProjectBE");
                });

            modelBuilder.Entity("VmProjectBE.Models.VlanVswitch", b =>
                {
                    b.Property<int>("VlanVswitchId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("vlan_vswitch_id")
                        .HasColumnOrder(1);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("VlanVswitchId"), 1L, 1);

                    b.Property<int>("VlanId")
                        .HasColumnType("int")
                        .HasColumnName("vlan_id")
                        .HasColumnOrder(2);

                    b.Property<int>("VswitchId")
                        .HasColumnType("int")
                        .HasColumnName("vswitch_id")
                        .HasColumnOrder(3);

                    b.HasKey("VlanVswitchId");

                    b.HasIndex("VlanId");

                    b.HasIndex("VswitchId");

                    b.ToTable("vlan_vswitch", "VmProjectBE");
                });

            modelBuilder.Entity("VmProjectBE.Models.VmInstance", b =>
                {
                    b.Property<int>("VmInstanceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("vm_instance_id")
                        .HasColumnOrder(1);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("VmInstanceId"), 1L, 1);

                    b.Property<int>("SectionId")
                        .HasColumnType("int")
                        .HasColumnName("SectionId");

                    b.Property<int>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("UserId");

                    b.Property<DateTime>("VmInstanceCreationDate")
                        .HasColumnType("datetime2(7)")
                        .HasColumnName("vm_instance_create_date")
                        .HasColumnOrder(5);

                    b.Property<DateTime>("VmInstanceExpireDate")
                        .HasColumnType("datetime2(7)")
                        .HasColumnName("vm_instance_expire_date")
                        .HasColumnOrder(6);

                    b.Property<string>("VmInstanceVcenterId")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasColumnName("vm_instance_vcenter_id")
                        .HasColumnOrder(4);

                    b.Property<string>("VmInstanceVcenterName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("vm_instance_vcenter_name")
                        .HasColumnOrder(3);

                    b.Property<string>("VmTemplateId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("vm_template_id")
                        .HasColumnOrder(2);

                    b.HasKey("VmInstanceId");

                    b.ToTable("vm_instance", "VmProjectBE");
                });

            modelBuilder.Entity("VmProjectBE.Models.VmInstanceIpAddress", b =>
                {
                    b.Property<int>("VmInstanceIpAddressId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("vm_instance_ip_address_id")
                        .HasColumnOrder(1);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("VmInstanceIpAddressId"), 1L, 1);

                    b.Property<int>("IpAddressId")
                        .HasColumnType("int")
                        .HasColumnName("ip_address_id")
                        .HasColumnOrder(3);

                    b.Property<int>("VmInstanceId")
                        .HasColumnType("int")
                        .HasColumnName("vm_instance_id")
                        .HasColumnOrder(2);

                    b.HasKey("VmInstanceIpAddressId");

                    b.HasIndex("IpAddressId");

                    b.HasIndex("VmInstanceId");

                    b.ToTable("vm_instance_ip_address", "VmProjectBE");
                });

            modelBuilder.Entity("VmProjectBE.Models.VmInstanceTag", b =>
                {
                    b.Property<int>("VmInstanceTagId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("vm_instance_tag_id")
                        .HasColumnOrder(1);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("VmInstanceTagId"), 1L, 1);

                    b.Property<int>("TagId")
                        .HasColumnType("int")
                        .HasColumnName("tag_id")
                        .HasColumnOrder(2);

                    b.Property<int>("VmInstanceId")
                        .HasColumnType("int")
                        .HasColumnName("vm_instance_id")
                        .HasColumnOrder(3);

                    b.HasKey("VmInstanceTagId");

                    b.HasIndex("TagId");

                    b.HasIndex("VmInstanceId");

                    b.ToTable("vm_instance_tag", "VmProjectBE");
                });

            modelBuilder.Entity("VmProjectBE.Models.VmInstanceVswitch", b =>
                {
                    b.Property<int>("VmInstanceVswitchId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("vm_instance_vswitch_id")
                        .HasColumnOrder(1);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("VmInstanceVswitchId"), 1L, 1);

                    b.Property<int>("VmInstanceId")
                        .HasColumnType("int")
                        .HasColumnName("vm_instance_id")
                        .HasColumnOrder(2);

                    b.Property<int>("VswitchId")
                        .HasColumnType("int")
                        .HasColumnName("vswitch_id")
                        .HasColumnOrder(3);

                    b.HasKey("VmInstanceVswitchId");

                    b.HasIndex("VmInstanceId");

                    b.HasIndex("VswitchId");

                    b.ToTable("vm_instance_vswitch", "VmProjectBE");
                });

            modelBuilder.Entity("VmProjectBE.Models.Vswitch", b =>
                {
                    b.Property<int>("VswitchId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("vswitch_id")
                        .HasColumnOrder(1);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("VswitchId"), 1L, 1);

                    b.Property<string>("VswitchDescription")
                        .IsRequired()
                        .HasColumnType("varchar(45)")
                        .HasColumnName("vswitch_description")
                        .HasColumnOrder(3);

                    b.Property<string>("VswitchName")
                        .IsRequired()
                        .HasColumnType("varchar(45)")
                        .HasColumnName("vswitch_name")
                        .HasColumnOrder(2);

                    b.HasKey("VswitchId");

                    b.ToTable("vswitch", "VmProjectBE");
                });

            modelBuilder.Entity("VmProjectBE.Models.VswitchTag", b =>
                {
                    b.Property<int>("VswitchTagId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("vswitch_tag_id")
                        .HasColumnOrder(1);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("VswitchTagId"), 1L, 1);

                    b.Property<int>("TagId")
                        .HasColumnType("int")
                        .HasColumnName("tag_id")
                        .HasColumnOrder(2);

                    b.Property<int>("VswitchId")
                        .HasColumnType("int")
                        .HasColumnName("vswitch_id")
                        .HasColumnOrder(3);

                    b.HasKey("VswitchTagId");

                    b.HasIndex("VswitchId");

                    b.ToTable("vswitch_tag", "VmProjectBE");
                });

            modelBuilder.Entity("VmProjectBE.Models.AccessToken", b =>
                {
                    b.HasOne("VmProjectBE.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("VmProjectBE.Models.Cookie", b =>
                {
                    b.HasOne("VmProjectBE.Models.SessionToken", "SessionToken")
                        .WithMany()
                        .HasForeignKey("SessionTokenId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("SessionToken");
                });

            modelBuilder.Entity("VmProjectBE.Models.Course", b =>
                {
                    b.HasOne("VmProjectBE.Models.ResourcePool", "ResourcePool")
                        .WithMany()
                        .HasForeignKey("ResourcePoolId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("ResourcePool");
                });

            modelBuilder.Entity("VmProjectBE.Models.FolderUser", b =>
                {
                    b.HasOne("VmProjectBE.Models.Folder", "Folder")
                        .WithMany()
                        .HasForeignKey("FolderId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("VmProjectBE.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Folder");

                    b.Navigation("User");
                });

            modelBuilder.Entity("VmProjectBE.Models.Pool", b =>
                {
                    b.HasOne("VmProjectBE.Models.Folder", "Folder")
                        .WithMany()
                        .HasForeignKey("FolderId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("VmProjectBE.Models.Section", "Section")
                        .WithMany()
                        .HasForeignKey("SectionId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Folder");

                    b.Navigation("Section");
                });

            modelBuilder.Entity("VmProjectBE.Models.PoolMembership", b =>
                {
                    b.HasOne("VmProjectBE.Models.Pool", "Pool")
                        .WithMany()
                        .HasForeignKey("GroupId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("VmProjectBE.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Pool");

                    b.Navigation("User");
                });

            modelBuilder.Entity("VmProjectBE.Models.Section", b =>
                {
                    b.HasOne("VmProjectBE.Models.Course", "Course")
                        .WithMany()
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("VmProjectBE.Models.Folder", "Folder")
                        .WithMany()
                        .HasForeignKey("FolderId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("VmProjectBE.Models.ResourcePool", "ResourcePool")
                        .WithMany()
                        .HasForeignKey("ResourcePoolId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("VmProjectBE.Models.Semester", "Semester")
                        .WithMany()
                        .HasForeignKey("SemesterId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Course");

                    b.Navigation("Folder");

                    b.Navigation("ResourcePool");

                    b.Navigation("Semester");
                });

            modelBuilder.Entity("VmProjectBE.Models.SessionToken", b =>
                {
                    b.HasOne("VmProjectBE.Models.AccessToken", "AccessToken")
                        .WithMany()
                        .HasForeignKey("AccessTokenId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("AccessToken");
                });

            modelBuilder.Entity("VmProjectBE.Models.Tag", b =>
                {
                    b.HasOne("VmProjectBE.Models.TagCategory", "TagCategory")
                        .WithMany()
                        .HasForeignKey("TagCategoryId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("TagCategory");
                });

            modelBuilder.Entity("VmProjectBE.Models.UserSectionRole", b =>
                {
                    b.HasOne("VmProjectBE.Models.Role", "Role")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("VmProjectBE.Models.Section", "Section")
                        .WithMany()
                        .HasForeignKey("SectionId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("VmProjectBE.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Role");

                    b.Navigation("Section");

                    b.Navigation("User");
                });

            modelBuilder.Entity("VmProjectBE.Models.VlanVswitch", b =>
                {
                    b.HasOne("VmProjectBE.Models.Vlan", "Vlan")
                        .WithMany()
                        .HasForeignKey("VlanId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("VmProjectBE.Models.Vswitch", "Vswitch")
                        .WithMany()
                        .HasForeignKey("VswitchId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Vlan");

                    b.Navigation("Vswitch");
                });

            modelBuilder.Entity("VmProjectBE.Models.VmInstanceIpAddress", b =>
                {
                    b.HasOne("VmProjectBE.Models.IpAddress", "IpAddress")
                        .WithMany()
                        .HasForeignKey("IpAddressId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("VmProjectBE.Models.VmInstance", "VmInstance")
                        .WithMany()
                        .HasForeignKey("VmInstanceId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("IpAddress");

                    b.Navigation("VmInstance");
                });

            modelBuilder.Entity("VmProjectBE.Models.VmInstanceTag", b =>
                {
                    b.HasOne("VmProjectBE.Models.Tag", "Tag")
                        .WithMany()
                        .HasForeignKey("TagId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("VmProjectBE.Models.VmInstance", "VmInstance")
                        .WithMany()
                        .HasForeignKey("VmInstanceId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Tag");

                    b.Navigation("VmInstance");
                });

            modelBuilder.Entity("VmProjectBE.Models.VmInstanceVswitch", b =>
                {
                    b.HasOne("VmProjectBE.Models.VmInstance", "VmInstance")
                        .WithMany()
                        .HasForeignKey("VmInstanceId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("VmProjectBE.Models.Vswitch", "Vswitch")
                        .WithMany()
                        .HasForeignKey("VswitchId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("VmInstance");

                    b.Navigation("Vswitch");
                });

            modelBuilder.Entity("VmProjectBE.Models.VswitchTag", b =>
                {
                    b.HasOne("VmProjectBE.Models.Vswitch", "Vswitch")
                        .WithMany()
                        .HasForeignKey("VswitchId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Vswitch");
                });
#pragma warning restore 612, 618
        }
    }
}
